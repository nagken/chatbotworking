apiVersion: v1
kind: Namespace
metadata:
  name: pss-knowledge-assist
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: pss-knowledge-assist
data:
  APP_NAME: "PSS Knowledge Assist"
  APP_ENVIRONMENT: "production"
  PORT: "8080"
  LOG_LEVEL: "INFO"
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_USER: "postgres"
  PROD_DB_NAME: "pss_knowledge_assist_prod"
  CACHE_ENABLED: "true"
  CACHE_TTL_SECONDS: "1800"
  CORS_ORIGINS: "http://localhost:3000,http://localhost:8080"
  CORS_ALLOW_CREDENTIALS: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: pss-knowledge-assist
type: Opaque
stringData:
  DB_PASSWORD: "your-secure-password-here"
  SECRET_KEY: "your-super-secret-key-change-this-in-production"
  GCP_PROJECT_ID: "your-gcp-project-id"
  BILLING_PROJECT: "your-billing-project"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pss-knowledge-assist-deployment
  namespace: pss-knowledge-assist
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pss-knowledge-assist
  template:
    metadata:
      labels:
        app: pss-knowledge-assist
    spec:
      containers:
      - name: pss-knowledge-assist
        image: pss-knowledge-assist:latest
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: pss-knowledge-assist-service
  namespace: pss-knowledge-assist
spec:
  selector:
    app: pss-knowledge-assist
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pss-knowledge-assist-ingress
  namespace: pss-knowledge-assist
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - pss-knowledge-assist.yourdomain.com
    secretName: pss-knowledge-assist-tls
  rules:
  - host: pss-knowledge-assist.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pss-knowledge-assist-service
            port:
              number: 80
